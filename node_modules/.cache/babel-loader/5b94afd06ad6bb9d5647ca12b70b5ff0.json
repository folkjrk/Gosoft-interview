{"ast":null,"code":"var _jsxFileName = \"/Users/astroxjrk/Downloads/Project-developer/Gosoft-interview/src/components/ColumnToggle.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ColumnToggle = props => {\n  const onToggle = e => {\n    // TODO: implement checkbox click handler\n\n    const {\n      name,\n      checked\n    } = e.target;\n    props.onToggle(name, checked);\n  };\n\n  // TODO: Bind handlers and props\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toggle-columns\",\n    children: Object.keys(props.toggles).map((toggle, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: toggle,\n          children: toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: toggle,\n          name: toggle,\n          type: \"checkbox\",\n          checked: props.toggles[toggle],\n          onChange: onToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = ColumnToggle;\nvar _c;\n$RefreshReg$(_c, \"ColumnToggle\");","map":{"version":3,"names":["React","ColumnToggle","props","onToggle","e","name","checked","target","Object","keys","toggles","map","toggle","index"],"sources":["/Users/astroxjrk/Downloads/Project-developer/Gosoft-interview/src/components/ColumnToggle.js"],"sourcesContent":["import React from 'react'\n\nexport const ColumnToggle = (props) => {\n  const onToggle = (e) => {\n    // TODO: implement checkbox click handler\n\n    const { name, checked } = e.target;\n    props.onToggle(name, checked);\n  }\n\n  // TODO: Bind handlers and props\n  return (\n    <div className=\"toggle-columns\">\n      { \n        Object.keys(props.toggles).map((toggle, index) => {\n          return ( \n          <div key={index}>\n            <label htmlFor={toggle}>\n              {toggle}\n            </label>\n            <input\n              id={toggle}\n              name={toggle}\n              type=\"checkbox\"\n              checked={props.toggles[toggle]}\n              onChange={onToggle}\n               />\n          </div>)\n        })\n      }\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACrC,MAAMC,QAAQ,GAAIC,CAAC,IAAK;IACtB;;IAEA,MAAM;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGF,CAAC,CAACG,MAAM;IAClCL,KAAK,CAACC,QAAQ,CAACE,IAAI,EAAEC,OAAO,CAAC;EAC/B,CAAC;;EAED;EACA,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,UAE3BE,MAAM,CAACC,IAAI,CAACP,KAAK,CAACQ,OAAO,CAAC,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;MAChD,oBACA;QAAA,wBACE;UAAO,OAAO,EAAED,MAAO;UAAA,UACpBA;QAAM;UAAA;UAAA;UAAA;QAAA,QACD,eACR;UACE,EAAE,EAAEA,MAAO;UACX,IAAI,EAAEA,MAAO;UACb,IAAI,EAAC,UAAU;UACf,OAAO,EAAEV,KAAK,CAACQ,OAAO,CAACE,MAAM,CAAE;UAC/B,QAAQ,EAAET;QAAS;UAAA;UAAA;UAAA;QAAA,QAChB;MAAA,GAVGU,KAAK;QAAA;QAAA;QAAA;MAAA,QAWT;IACR,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAEA;AAEV,CAAC;AAAA,KA9BYZ,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}